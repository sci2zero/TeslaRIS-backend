@startuml teslaris

package commonTypes {

  enum ApproveStatus {
    REQUESTED
    APPROVED
    DECLINED
  }

  class Language {
    -String languageCode ' ISO 639-1 - https://www.loc.gov/standards/iso639-2/php/English_list.php
    -Set<MultiLingualContent> name
  }

  !startsub Language_Tag
    class LanguageTag {
      -String languageTag ' https://github.com/EuroCRIS/CERIF-Core/blob/main/datatypes/Language_Tag.md
      -String display
    }
  !endsub

  class Country {
    -String code ' ISO_3166_Alpha2_Code
    -Set<MultiLingualContent> name
    -String processedName
  }

  !startsub Multilingual_Content
    class MultiLingualContent {
      LanguageTag language
      String content
      Integer priority
    }
  !endsub

  class GeoLocation {
    Double longitude
    Double latitude
    String address
  }

  class ResearchArea {
    Set<MultiLingualContent> name
    Set<MultiLingualContent> description
    String processedName
  }
  ResearchArea "1" --> "*" ResearchArea
}


package user {
  enum UserRole {
    ADMIN
    RESEARCHER
    INSTITUTIONAL_EDITOR
    COMMISSION
    VICE_DEAN_FOR_SCIENCE
    INSTITUTIONAL_LIBRARIAN
    HEAD_OF_LIBRARY
    PROMOTION_REGISTRY_ADMINISTRATOR
  }

  class Privilege {
    -String name
  }

  class Authority {
    -String name
    -Set<Privilege> privileges
  }


  class User {
    -String email
    -String password
    -String note
    -Stirng firstname
    -Stirng lastname
    -boolean locked
    -boolean canTakeRole
    -Language preferedUILanguage
    -Language preferredReferenceCataloguingLanguage
    -Authority authority
    -Person person
    -OrganisationUnit OrganisationUnit
    -Commission commission
  }

  class UserAccountActivation {
    -String activationToken
  }
  UserActivation -> User

  class RefreshToken {
    -String refreshTokenValue
  }
  RefreshToken -> User
}


package person {

!startsub Person
  class Person {
    -PersonName name
    -Set<PersonName> otherNames
    +String name()
    -Set<Involvement> involvements
    -Set<ExpertiseOrSkill> expertisesAndSkills
    -Set<Prize> prizes
    -Set<MultiLingualContent> biography
    -Set<MultiLingualContent> keyword
    -String apvnt
    -String eCrisId
    -String eNaukaId
    -String orcid
    -String scopusAuthorId
    -String openAlexId
    -String webOfScienceId
    -Set<Integer> oldIds
    -Set<Integer> mergedIds
    -Set<ResearchArea> researchAreas
    -ApproveStatus approveStatus
  }
!endsub

  class PersonName {
    -String firstname
    -String otherName
    -String lastname
    -LocalDate dateFrom
    -LocalDate dateTo
  }

  class PersonalInfo {
    -LocalDate localBirth
    -String placeOfBrith
    -Sex sex
    -PostalAddress postalAddress
    -Contact contact
  }

  class Contact {
      -String contactEmail
      -String phoneNumber
  }

  class PostalAddress {
     -Country country
     -Set<MultiLingualContent> streetAndNumber
     -Set<MultiLingualContent> city
  }

  class Involvement {
    -LocalDate dateFrom
    -LocalDate dateTo
    -ApproveStatus approveStatus
    -Set<DocumentFile> proofs
    -InvolvementType involvementType
    -Set<MultiLingualContent> affiliationStatement
    ' an entity OrganisationUnit can be linked with Involvement, or it should be only specified in affiliationStatement
    ' it means if I studied in Germany, that institution record wouldn't be created in the database, it will be only specified in affiliationStatement
  }

  enum InvolvementType {
      STUDIED_AT
      COMPLETED_COURSE_AT
      POSTDOC_AT
      MEMBER_OF
      EMPLOYED_AT
      HIRED_BY ' or selfemployed
  }

  Involvement "*" --> "1" Person : personInvolved
  Involvement "*" --> "0..1" OrganisationUnit : organisationUnit


  class Education extends Involvement {
    -Set<MultiLingualContent> thesisTitle
    -Set<MultiLingualContent> title
    -Set<MultiLingualContent> shortTitle
  }

  class Employment extends Involvement {
    -EmploymentPosition employmentPosition
    -Set<MultiLingualContent> role
  }

  enum EmploymentPosition {
    SCIENTIFIC_ADVISOR
    ASSISTANT_TRAINEE
    EXPERT_ASSOCIATE
    ASSISTANT
    SENIOR_EXPERT_ASSOCIATE
    INSTRUCTOR
    EXPERT_ADVISOR
    COLLABORATOR
    SENIOR_INSTRUCTOR
    TEACHER
    TEACHER_OF_FOREIGN_LANGUAGES_AND_SKILLS
    RESEARCHER
    PROFESSOR_ENGINEER_HABILITATED
    ASSISTANT_WITH_MASTER
    ASSISTANT_WITH_MAGISTRATE
    ASSISTANT_WITH_DOCTORATE
    LECTURER
    SENIOR_LECTURER
    PROFESSOR_OF_VOCATIONAL_STUDIES
    ASSISTANT_PROFESSOR
    ASSOCIATE_PROFESSOR
    TEACHING_ASSISTANT
    FULL_PROFESSOR
    PROFESSOR_EMERITUS
    RETIRED_PROFESSOR
    RESEARCH_TRAINEE
    RESEARCH_ASSOCIATE
    SCIENTIFIC_COLLABORATOR
    SENIOR_SCIENTIFIC_COLLABORATOR
    TEACHING_ASSOCIATE
  }

  class Membership extends Involvement {
      -Set<MultiLingualContent> contributionDescription
      -Set<MultiLingualContent> role
  }

  class ExpertiseOrSkill {
    Set<MultiLingualContent> name
    Set<MultiLingualContent> description
    Set<DocumentFile> proofs
  }

  ExpertiseOrSkill "*" --> "1" Person : person

  class LanguageKnowledge extends ExpertiseOrSkill {
      Language language
    '  int speakingLevel
    '  int readingLevel
    '  int writingLevel
  }
  ' the another example of expertise might be usage of some complex piece of equipment

  class Prize {
    Set<MultiLingualContent> title
    Set<MultiLingualContent> description
    Set<DocumentFile> proofs
    LocalDate date
  }

  Prize "*" --> "1" Person : person

  enum Sex {
    MALE
    FEMALE
  }

}

package institution {
  !startsub Organisation_Unit
    class OrganisationUnit {
      -Set<MultiLingualContent> name
      -String nameAbbreviation
      -Set<MultiLingualContent> keyword
      -Set<ResearchArea> researchAreas
      -GeoLocation location
      -ApproveStatus approveStatus
      -Set<Integer> oldIds
      -Set<Integer> mergedIds
      -String scopusAfid
      -String openAlexId
      -String ror
      -Contact contact
      -Set<String> uris
    }
  !endsub

  OrganisationUnitsRelation "*" --> "0..1" OrganisationUnit : sourceOrganisationUnit
  OrganisationUnitsRelation "*" --> "0..1" OrganisationUnit : targetOrganisationUnit

  class OrganisationUnitsRelation {
    Set<MultiLingualContent> sourceAffiliationStatement
    Set<MultiLingualContent> targetAffiliationStatement
    OrganisationUnitRelationType relationType
    LocalDate dateFrom
    LocalDate dateTo
    ApproveStatus approveStatus
    Set<DocumentFile> proofs
  }

  class OrganisationUnitTrustConfiguration {
    -Boolean trustNewPublications
    -Boolean trustNewPublications
  }
  OrganisationUnitTrustConfiguration --> OrganisationUnit

  enum OrganisationUnitsRelationType {
    BELONGS_TO
    MEMBER_OF
  }

}

package document {

  !startsub Person_Contribution
    enum DocumentContributionType {
      AUTHOR
      EDITOR
      REVIEWER
      ADVISOR
      BOARD_MEMBER
    }
  !endsub

  class Publisher {
    -Set<MultiLingualContent> name
    -Set<MultiLingualContent> place
    -Set<MultiLingualContent> state
    -Set<Integer> oldIds
    -Set<Integer> mergedIds
    -Country country
  }

  !startsub Person_Contribution
    class PersonContribution {
      -Person person
      -Set<MultiLingualContent> contributionDescription
      -AffiliationStatement affiliationStatement
      -Set<OrganisationUnit> institutions
      -Integer orderNumber
      -ApproveStatus approveStatus
      ' TODO: maybe we need here a new enumeration, whether contribution is claimed or not by author
    }

    PersonContribution "*" --> "0..*" OrganisationUnit : institutions
    PersonContribution "*" --> "1" Person : person
    PersonContribution "1" --> "0..1" AffiliationStatement : affiliationStatement
  !endsub

  !startsub Person_Contribution
    class AffiliationStatement {
      Set<MultiLingualContent> displayAffiliationStatement
      PersonName displayPersonName
      PostalAddress address
      Contact contact
    }
  !endsub

  !startsub Person_Document_Contribution
    class PersonDocumentContribution extends PersonContribution {
      -DocumentContributionType contributionType
      -boolean isMainContributor
      -boolean isCorrespondingContributor
      -boolean isBoardPresident
      -EmploymentTitle employmentTitle
      -PersonalTitle personalTitle
    }
  !endsub

  !startsub Person_Contribution
    class DocumentFile {
      String filename
      String serverFilename
      Set<MultiLingualContent> description
      String mimeType
      Long fileSize
      ResourceType resourceType
      AccessRights accessRights
      License license
      ApproveStatus approveStatus
      boolean canEdit
      LocalDateTime timestamp
      boolean latest
      boolean isVerifiedData
      String legacyFilename
      Document document
      Person person
    }
  !endsub

  enum License {
    BY
    BY_SA
    BY_NC
    BY_NC_SA
    BY_ND
    BY_NC_ND
    CC0
  }

  enum ResourceType {
    PREPRINT
    OFFICIAL_PUBLICATION
    SUPPLEMENT
    PROOF
    IMAGE
    STATEMENT
    ADVISOR_CONFLICT_OF_INTEREST
  }

  !startsub Document
    class Document {
      -Set<MultiLingualContent> title
      -Set<MultiLingualContent> subTitle
      -Set<MultiLingualContent> description
      -Set<MultiLingualContent> adminNote
      -Set<PersonDocumentContribution> contributors
      -Set<String> uris
      -String documentDate
      -Set<DocumentFile> fileItems
      -Set<DocumentFile> proof
      -Set<MultiLingualContent> keywords
      -ApproveStatus approveStatus
      -String doi
      -String scopusId
      -String openAlexId
      -String webOfScienceId
      -Set<Integer> oldIds
      -Set<Integer> mergedIds
    }
  !endsub

  class ProceedingsPublication extends Document {
    -ProceedingsPublicationType proceedingsPublicationType
    -String startPage;
    -String endPage;
    -Integer numberOfPages
    -String articleNumber
  }

  enum ProceedingsPublicationType {
      REGULAR_FULL_ARTICLE
      INVITED_FULL_ARTICLE
      INVITED_ABSTRACT_ARTICLE
      REGULAR_ABSTRACT_ARTICLE
      PREFACE
      LEXICOGRAPHIC_UNIT
      POLEMICS
      SCIENTIFIC_CRITIC
    }

  class Proceedings extends Document {
    -String eISBN
    -String printISBN
    -Integer numberOfPages
    -Set<LanguageTag> languages
    -String publicationSeriesVolume
    -String publicationSeriesIssue
  }

  class Conference extends Event{
    -String number
    -String fee
    -String confId
    -String openAlexId
  }

  !startsub Event
    class Event {
      -Set<MultiLingualContent> name
      -Set<MultiLingualContent> nameAbbreviation
      -Set<MultiLingualContent> description
      -Set<MultiLingualContent> keywords
      -Boolean serialEvent
      -LocalDate dateFrom
      -LocalDate dateTo
      -Country country
      -Set<MultiLingualContent> place
      -Set<PersonEventContribution> contributors
      -Set<Integer> oldIds
      -Set<Integer> mergedIds
      -String openAlexId
      -String confId
      -Integer oldId
      -Set<String> uris
    }
  !endsub

  enum EventContributionType {
     ORGANIZATION_BOARD_CHAIR
     ORGANIZATION_BOARD_MEMBER
     REVIEWER
     PROGRAMME_BOARD_MEMBER  ' TODO: check other types here - https://github.com/EuroCRIS/CERIF-Vocabularies/blob/master/PersonEventInvolvements.xml
     SPEAKER
     PANELISTS
     CHAIR
     AUDIENCE
     DEMONSTRATOR
  }

  class PersonEventContribution extends PersonContribution {
     -EventContributionType contributionType
  }

  EventsRelation "*" --> "0..1" Event : source
  EventsRelation "*" --> "0..1" Event : target

  class EventsRelation {
    EventsRelationType relationType
  }


  enum EventsRelationType {
    PART_OF
' the relation type above is used to link one event which is part of the another event (for instance, workshop at a conference)
    BELONGS_TO_SERIES
' the relation type above is used to link an event occurence (conference, for instance ICIST 2023) with event series (event with data property serialEvent=true, for instance ICIST)
    COLLOCATED_WITH
' the relation type above is used to link two events organized together
  }

  ProceedingsPublication "1..*" --> "1" Proceedings : proceedings
' Proceedings "1..*" --> "1" Conference the relation below should replace this one. However, the conference should have one or more linked proceedings,
' but also any event (for instance plenary presentation is an event which is part of conference) could have linked documents (presentation, dataset, etc.)

  !startsub Document
    Document "*" --> "0..1" Event
    Document "1" --> "1..*" PersonDocumentContribution
  !endsub

  Proceedings "1..*" --> "0..1" PublicationSeries : publicationSeries

  !startsub Journal_Publication
    class JournalPublication extends Document {
      -JournalPublicationType journalPublicationType
      -String startPage
      -String endPage
      -Integer numberOfPages
      -String articleNumber
      -String volume
      -String issue
    }
  !endsub

  enum JournalPublicationType {
      REVIEW_ARTICLE
      RESEARCH_ARTICLE
      PREFACE
      COMMENT
      CORRECTION
      LEXICOGRAPHIC_UNIT
      POLEMICS
      SCIENTIFIC_CRITIC
    }

  class PublicationSeries {
    -String eISSN
    -String printISSN
    -Set<PersonJournalContribution> contributors
    -Set<LanguageTag> languages
    -Set<MultiLingualContent> title
    -Set<MultiLingualContent> nameAbbreviation
    -Set<Integer> oldIds
    -Set<Integer> mergedIds,
    -String openAlexId
    -Set<String> uris
  }

  class Journal extends PublicationSeries {
  }

  class BookSeries extends PublicationSeries {
    ' for instance https://www.springer.com/gp/computer-science/lncs
  }

  class PersonPublicationSeriesContribution extends PersonContribution {
    -PublicationSeriesContributionType contributionType
    -LocalDate dateFrom
    -LocalDate dateTo
  }

  enum PublicationSeriesContributionType {
    EDITOR
    ASSOCIATE_EDITOR
    REVIEWER
    SCIENTIFIC_BOARD_MEMBER
  }

  JournalPublication "1..*" --> "1" Journal

  class MonographPublication extends Document {
    -MonographPublicationType monographPublicationType
    -String startPage;
	-String endPage
    -Integer numberOfPages
    -String articleNumber
  }

  enum MonographPublicationType {
      CHAPTER
      RESEARCH_ARTICLE
      PREFACE
      LEXICOGRAPHIC_UNIT
      POLEMICS
      SCIENTIFIC_CRITIC
    }

  class Monograph extends Document {
    -MonographType monographType
    -String printISBN
    -String eISBN
    -Integer numberOfPages
    -String volume
    ' volume and number are defined only in the case publicationSeries is defined.
    ' We can even model that with link entity PublicationToPublicationSeriesRelation (with volume and number)
    -String number
    -Set<LanguageTag> languages
    -ResearchArea researchArea
  }

  enum MonographType {
        RESEARCH_MONOGRAPH
        BOOK
        BIBLIOGRAPHY
        TRANSLATION
        STUDY
      }

  Monograph "1..*" --> "0..1" PublicationSeries : publicationSeries

  MonographPublication "1..*" --> "1" Monograph

  class Patent extends Document {
    -String number
  }

  class InformativeAttachment extends Document {
  }

  class EncyclopedicContribution extends Document {
  }

  class Thesis extends Document {
    -OrganisationUnit OrganisationUnit
    -Set<MultiLingualContent> externalOrganisationUnitName
    -ThesisType thesisType
    -LocalDate topicAcceptanceDate
    -LocalDate thesisDefenceDate
    -Integer numberOfPages
    -Set<LanguageTag> languages
    -ResearchArea researchArea
    -LanguageTag writingLanguage
    -boolean isOnPublicReview
    -boolean isOnPublicReviewPause
    -Set<LocalDate> publicReviewStartDates
    -Set<DocumentFile> preliminaryFiles
    -Set<DocumentFile> preliminarySupplements
    -Set<DocumentFile> commissionReports
    -boolean isArchived
  }

  class Dataset extends Document {
    -String internalNumber
  }

  class Software extends Document {
    -String internalNumber
  }

  enum ThesisType {
    BACHELOR
    MR
    PHD
    MASTER
    PHD_ART_PROJECT
    BACHELOR_WITH_HONORS
    UNDERGRADUATE_THESIS
  }


  PublicationSeries "1" --> "1..*" PersonPublicationSeriesContribution
  Event "1" --> "1..*" PersonEventContribution
  Thesis "0..*" --> "1" Publisher
  Monograph "0..*" --> "1" Publisher
  Proceedings "0..*" --> "1" Publisher
  Patent "0..*" --> "1" Publisher
  Dataset "0..*" --> "1" Publisher
  Software "0..*" --> "1" Publisher


  DocumentsRelation "*" --> "0..1" Document : source
  DocumentsRelation "*" --> "0..1" Document : target

  class DocumentsRelation {
    DocumentsRelationType relationType
  }


  enum DocumentsRelationType {
    PART_OF
    USED_BY
    CITED_BY
    RESULT_OF
  }

}

package project {

  class Project {
    Set<MultiLingualContent> name
    Set<MultiLingualContent> description
    Set<MultiLingualContent> nameAbbreviation
    Set<MultiLingualContent> keywords
    Set<MultiLingualContent> adminNote
    Set<String> uris
    Set<PersonProjectContribution> contributors
    Set<ProjectDocument> documents
    LocalDate dateFrom
    LocalDate dateTo
    Set<ProjectStatus> statuses
    ProjectType type
    Set<Funding> fundings
  }

  enum ProjectStatus {
    PROPOSAL
    SUBMITTED
    REJECTED
    APPROVED
    STARTED
    COMPLETED
  }

  enum ProjectType {
    INTERNAL
    INTERNATIONAL
    NATIONAL
  }

  class Funding {
    String fundingNumber
    DocumentFile agreement
    Set<MultiLingualContent> fundingCall
    Set<MultiLingualContent> fundingProgram
    Set<MultiLingualContent> fundingAgency
    MonetaryAmount grant
    LocalDate dateFrom
    LocalDate dateTo
  }

  class MonetaryAmount {
    double amount
    Currency currency
  }

  class Currency {
    Set<MultiLingualContent> name
    String symbol ' for instance - $
    String code  ' for instance USD
  }

  class PersonProjectContribution extends PersonContribution {
    ProjectContributionType contributionType
    LocalDate dateFrom
    LocalDate dateTo
  }

  enum ProjectContributionType {
    PRINCIPLE_INVESTIGATOR
    PARTICIPATION
  }

  ProjectsRelation "*" --> "1" Project : source
  ProjectsRelation "*" --> "1" Project : target

  class ProjectsRelation {
    ProjectsRelationType relationType
    LocalDate dateFrom
    LocalDate dateTo
  }


  enum ProjectsRelationType {
    PART_OF
    RESULT_OF
    PREDECESSOR
  }


  class ProjectDocument {
    Document document
    ProjectDocumentType relationType
  }


  enum ProjectDocumentType {
    REPORT
    RESULT
    USED
  }

  class AssessmentRulebook {
    -Set<MultiLingualContent> name
    -Set<MultiLingualContent> description
    -LocalDate issueDate
    -boolean isDefault
    -DocumentFile pdf
  }

  AssessmentRulebook "0..*" --> "1" Publisher

  AssessmentRulebook "0..*" -- "0..*" AssessmentMeasure

  class AssessmentMeasure {
    -String code
    ' M28b
    ' M22
    -Double value
    ' 2.5
    -Set<MultiLingualContent> title
    ' examples of Serbian rule book:
    ' Uređivanje istaknutog međunarodnog naučnog   M28b  2,5  2,5  2,5  2,5  časopisa (gost urednik) ili publikacije sa monografskim delima kategorije M14
    ' Autor rada u istaknutom međunarodnom časopisu
    -String pointRule
    -String scalingRule
  }

  class AssessmentClassification {
    -String code
    ' international journal
    ' leading international journal
    -Set<MultiLingualContent> title
    -String formalDescriptionOfRule
    ' rule is based on indicators and commission properties
    -Set<ApplicableEntityType> applicableTypes
  }

  enum ApplicableEntityType {
    MONOGRAPH
    EVENT
    DOCUMENT
    PERSON
    ORGANISATION_UNIT
    PUBLICATION_SERIES
    ALL
  }

  class Commission {
    MultiLingualContent description
    ' it might be description of the commission goal, for instance comission for promotion to higher position, or Faculty of Sciences commission, or national/Serbian ministry of science commission
    -Set<String> sources
    -LocalDate assessmentDateFrom
    -LocalDate assessmentDateTo
    -Set<Document> documentsForAssessment
    -Set<Person> personsForAssessment
    -Set<OrganisationUnit> organisationUnitsForAssessment
    -String formalDescriptionOfRule
    ' it additionally defining rules for automatic determination of assessment classification, for instance all research areas are taken into account and the best classification is taken into account
    ' we should consider whether researchAreas (inherited from OrganisationUnit), sources, assessmentDateFrom and assessmentDateTo can be specified through formal description
  }

  Commission "0..1 sourceCommission" --> "0..* relations" CommissionRelation

  class CommissionRelation {
    -ResultClaculationMethod resultCalculationMethod
    -Integer priority
  }

  CommissionRelation "0..*" --> "0..* targetCommission" Commission

  class EntityAssessmentClassification {
    -LocalDateTime timestamp
    -Boolean manual
    -Integer classificationYear
  }

  EntityAssessmentClassification "0..*" --> "1" Commission
  EntityAssessmentClassification "0..*" --> "1" AssessmentClassification

  class DocumentAssessmentClassification extends EntityAssessmentClassification {
  }

  DocumentAssessmentClassification "0..*" --> "1" Document

  class EventAssessmentClassification extends EntityAssessmentClassification {
  }

  EventAssessmentClassification "0..*" --> "1" Event

  class PublicationSeriesAssessmentClassification extends EntityAssessmentClassification {
  }

  PublicationSeriesAssessmentClassification "0..*" --> "1" PublicationSeries

  class PersonAssessmentClassification extends EntityAssessmentClassification {
  }

  PersonAssessmentClassification "0..*" --> "1" Person

  class OrganisationUnitAssessmentClassification extends EntityAssessmentClassification {
  }

  OrganisationUnitAssessmentClassification "0..*" --> "1" OrganisationUnit

  class Indicator {
    -String code
    -Set<MultiLingualContent> title
    ' h-index
    ' two years impact factor (numeric value in PublicationSeries_Indicator - 1.138)
    ' two years impact factor position (number value in PublicationSeries_Indicator - 56, meaning a journal is 56th in the list according to two years impact factor )
    ' two years impact factor fraction (number value in PublicationSeries_Indicator - 0.17, meaning a journal belongs to 17% of the best journals in a research field)
    ' AMS journal (boolean value in PublicationSeries_Indicator, true - journal belongs to AMS list, false - not belongs to the list)
    ' etc.
    -Set<MultiLingualContent> description
    -AccessLevel accessLevel
    -Set<ApplicableEntityType> applicableTypes
    -IndicatorContentType contentType
  }

  enum AccessLevel {
    OPEN
    CLOSED
    ADMIN_ONLY
  }

  enum IndicatorContentType {
    TEXT
    BOOL
    NUMBER
    ANYTHING
  }

  enum ApplicableEntityType {
    MONOGRAPH
    EVENT
    DOCUMENT
    PERSON
    ORGANISATION_UNIT
    PUBLICATION_SERIES
    ALL
  }

  class EntityIndicator {
    -Double numericValue
    -Boolean booleanValue
    -String textualValue
    -LocalDateTime timestamp
    -EntityIndicatorSource source
    -LocalDate fromDate
    -LocalDate toDate
    -Set<DocumentFile> proofs
    -Set<String> urls
  }

  EntityIndicator "0..*" --> "1" Indicator
  EntityIndicator "0..*" --> "0" User
  ' in some cases there won't be user, such as when performing automatic import of journal impact factors from external source

  enum EntityIndicatorSource {
    MANUAL
    WEB_OF_SCIENCE
    SCIMAGO
    ERIH_PLUS
    MKS_SLAVISTS
  }

  class DocumentIndicator extends EntityIndicator {
  }

  DocumentIndicator "0..*" --> "1" Document


  class EventIndicator extends EntityIndicator {
  }

  EventIndicator "0..*" --> "1" Event

  class PublicationSeriesIndicator extends EntityIndicator {
    -String categoryIdentifier
    -String edition
  }

  PublicationSeriesIndicator "0..*" --> "1" PublicationSeries

  class PersonIndicator extends EntityIndicator {
  }

  PersonIndicator "0..*" --> "1" Person

  class OrganisationUnitIndicator extends EntityIndicator {
  }

  OrganisationUnitIndicator "0..*" --> "1" OrganisationUnit

}

@enduml
